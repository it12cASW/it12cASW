openapi: 3.0.0
info:
  title: User API
  version: 1.0.0
  description: API para la gestión, uso de https://editor.swagger.io/ para hacer las pruebas de la API
servers:
  - url: http://127.0.0.1:8000/api
    description: Servidor de desarrollo
  - url: https://it12casw-backend.fly.dev/api
    description: Servidor de producción
paths:
  /users/:
    get:
      tags:
      - Users
      summary: Devuelve todos los usuarios
      operationId: get_users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /users/login/:
    post:
      tags:
      - Users
      summary: Iniciar sesión de usuario
      operationId: user_login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: Se ha iniciado sesion correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '400':
          description: No se han proporcionado todos los datos
        '404':
          description: Usuario o contraseña incorrectos
  /users/register/:
    post:
      tags:
      - Users
      summary: Registro de usuario
      operationId: user_registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
              required:
                - username
                - password
                - email
      responses:
        '201':
          description: El usuario se ha registrado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          description: No se han introducido todos los datos
        '409':
          description: El usuario ya existe
  /issues/:
    get:
      tags:
      - Issues
      summary: Devuelve todas las issues y se pueden filtrar y ordenar
      operationId: get_issues
      parameters:
      - in: query
        name: search
        schema: 
          type: string
        description: Busqueda de issues segun el texto introducido
      - in: query
        name: status
        schema: 
          type: string
        description: Filtrado de las issues segun el estado de la issue
      - in: query
        name: priority
        schema: 
          type: string
        description: Filtrado de las issues segun la prioridad de la issue
      - in: query
        name: assigned
        schema: 
          type: string
        description: Filtrado de las issues segun la persona asignada a la issue
      - in: query
        name: creator
        schema: 
          type: string
        description: Filtrado de las issues segun el creador de la issue
      - in: query
        name: asociated
        schema: 
          type: string
        description: Filtrado de las issues segun el usuario asociado a la issue
      - in: query
        name: order_field
        schema:
          type: string
        description: Campo por el qual se quiere ordenar la issue
      - in: query
        name: order
        schema:
          type: string
        description: el orden a seguir para ordenar las issues
      responses:
        '200':
          description: se han pasado todas las issues correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Issue'
      security:
      - ApiKeyAuth: []
  /issues/create/:
    post:
      tags:
      - Issues
      summary: Crear una issue
      operationId: create_issues
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id_creador:
                  type: integer
                asunto:
                  type: string
                descripcion:
                  type: string
                asociado: 
                  type: integer
                asignado:
                  type: integer
                blocked: 
                  type: boolean
                reason_blocked:
                  type: string
                deadline:
                  type: string
                  format: date-time
                prioridad:
                  type: string
                status:
                  type: string
              required:
                - id_creador
                - asunto
                - description
                  
      responses:
        '201':
            description: Se ha creado la issue correctamente
            content:
              application/json:
                schema:
                  type: object
                  items: 
                    $ref: '#/components/schemas/Issue'
        '400':
          description: El usuario no ha introducido los datos necesarios
        '401':
          description: Falta el token de autentificación
        '409':
          description: Alguno de los usuarios introducido no existe
      security:
      - ApiKeyAuth: []
      
  /issues/{idIssue}/delete/:
    post:
      tags:
      - Issues
      summary: Eliminar una issue
      operationId: delete_issue
      parameters:
      - name: idIssue
        in: path
        description: ID de la Issue a eliminar
        required: true
        schema:
          type: integer
          format: int64
      
      responses:
        '400':
          description: No se ha podido encontrar la Issue
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '200':
            description: Se ha eliminado la issue correctamente
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
        '401':
          description: El token no es válido
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      security:
      - ApiKeyAuth: []
  
  /issues/{idIssue}/associated/:
    get:
      tags:
      - Asociados
      summary: Obtiene el usuario que esta asociado a la issue especificada en el path
      operationId: get_asociated
      parameters:
      - name: idIssue
        in: path
        description: ID de la Issue a la qual se quiere consultar el usuario asociado
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
            description: Se ha añadido el usuario como asociado a la issue correctamente
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                    items: 
                      $ref: '#/components/schemas/UserSimple'
        '401':
            description: El token no es válido
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
        '404':
          description: No se ha podido encontrar la Issue
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      security:
      - ApiKeyAuth: []
    put:
      tags:
      - Asociados
      summary: Añade un usuario como asociado a una issue
      operationId: add_asociated
      parameters:
      - name: idIssue
        in: path
        description: ID de la Issue a la qual se le debe añadir el asociado
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties: 
                    idUser:
                      type: integer
                      description: ID del usuario al que se le quiere associar la Issue
      responses:
        '200':
            description: Se ha añadido el usuario como asociado a la issue correctamente
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                    items: 
                      $ref: '#/components/schemas/Issue'
        '400':
            description: Los datos introducidos no son validos
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
        '401':
            description: El token no es válido
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
        '404':
          description: No se ha podido encontrar la Issue
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '409':
          description: La issue ya tiene un usuario asociado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      security:
      - ApiKeyAuth: []
  
  /issues/{idIssue}/associated/delete/:
    delete:
      tags:
      - Asociados
      summary: Elimina el usuario que esta asociado a la issue
      operationId: delete_asociated
      parameters:
      - name: idIssue
        in: path
        description: ID de la Issue a la qual se le debe eliminar el usuario asociado
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
            description: Se ha eliminado el usuario associado a la issue correctamente
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                    items: 
                      $ref: '#/components/schemas/Issue'
        '401':
            description: El token no es válido
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
        '404':
          description: La issue no existe 
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      security:
      - ApiKeyAuth: []
    
  /issues/{idIssue}/asigned/:
    get:
      tags:
      - Asignados
      summary: Obten el usuario asignado a la issue
      operationId: get_asigned
      parameters:
      - name: idIssue
        in: path
        description: ID de la Issue de la que se quiere realizar la consulta del usuario asociado
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
            description: Se ha obtenido el usuario asociado correctamente
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                    items: 
                      $ref: '#/components/schemas/UserSimple'
        '401':
            description: El token no es válido
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
        '404':
          description: No se ha podido encontrar la Issue
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      security:
      - ApiKeyAuth: []
    put:
      tags:
      - Asignados
      summary: Añade un usuario como asignado a una issue
      operationId: add_asigned
      parameters:
      - name: idIssue
        in: path
        description: ID de la Issue a la qual se le debe añadir el usuario asignado
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties: 
                    idUser:
                      type: integer
                      description: ID del usuario al que se le quiere asignar la Issue
      responses:
        '200':
            description: Se ha añadido el usuario como asignado a la issue correctamente
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                    items: 
                      $ref: '#/components/schemas/Issue'
        '400':
            description: Los datos introducidos no son validos
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
        '401':
            description: El token no es válido
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
        '404':
          description: No se ha podido encontrar la Issue
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '409':
          description: La issue ya tiene un usuario asociado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      security:
      - ApiKeyAuth: []
  
  /issues/{idIssue}/asigned/delete/:
    delete:
      tags:
      - Asignados
      summary: Elimina el usuario que esta asignado a la issue
      operationId: delete_asigned
      parameters:
      - name: idIssue
        in: path
        description: ID de la Issue a la qual se le debe eliminar el usuario asignado
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
            description: Se ha eliminado el usuario asignado a la issue correctamente
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                    items: 
                      $ref: '#/components/schemas/Issue'
        '401':
            description: El token no es válido
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
        '404':
          description: La issue no existe 
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      security:
      - ApiKeyAuth: []
      
  /issues/{idIssue}/watchers/:
    get:
      tags:
      - Watchers
      summary: Obten el usuario asignado a la issue
      operationId: get_watchers
      parameters:
      - name: idIssue
        in: path
        description: ID de la Issue de la que se quiere realizar la consulta de los vigilantes
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
            description: Se han obtenido los vigilantes de la issue correctamente
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                    items: 
                      $ref: '#/components/schemas/UserSimple'
        '401':
            description: El token no es válido
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
        '404':
          description: No se ha podido encontrar la Issue
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      security:
      - ApiKeyAuth: []
    put:
      tags:
      - Watchers
      summary: Añade un usuario como vigilante de una issue
      operationId: add_watcher
      parameters:
      - name: idIssue
        in: path
        description: ID de la Issue a la qual se le debe añadir el usuario vigilante
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties: 
                    idUser:
                      type: integer
                      description: ID del usuario que pasara a ser vigilante de la issue
      responses:
        '200':
            description: Se ha añadido el usuario como vigilante de la issue correctamente
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                    items: 
                      $ref: '#/components/schemas/Issue'
        '400':
            description: Los datos introducidos no son validos
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
        '401':
            description: El token no es válido
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
        '404':
          description: No se ha podido encontrar la Issue
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '409':
          description: El usuario pasado en el body ya es vigilante de la issue
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      security:
      - ApiKeyAuth: []
  
  /issues/{idIssue}/watchers/delete/:
    put:
      tags:
      - Watchers
      summary: Elimina UN usuario que esta vigilando uan de las issues
      operationId: delete_watcher
      parameters:
      - name: idIssue
        in: path
        description: ID de la Issue a la qual se le debe eliminar el usuario asignado
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties: 
                idUser:
                  type: integer
                  description: ID del usuario que pasara a ser vigilante de la issue
      responses:
        '200':
            description: Se ha eliminado el usuario asignado a la issue correctamente
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                    items: 
                      $ref: '#/components/schemas/Issue'
        '400':
            description: Los datos introducidos no son validos, el usuario introducido no es vigilante, o no existe
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
        '401':
            description: El token no es válido
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
        '404':
          description: La issue no existe 
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      security:
      - ApiKeyAuth: []
      
  /issues/{idIssue}/watchers/deleteAll/:
    delete:
      tags:
      - Watchers
      summary: Elimina todos los vigilantes 
      operationId: deleteall_watcher
      parameters:
      - name: idIssue
        in: path
        description: ID de la Issue a la qual se le debe eliminar el usuario asignado
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
            description: Se ha eliminado el usuario asignado a la issue correctamente
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                    items: 
                      $ref: '#/components/schemas/Issue'
        '400':
            description: La issue no tiene usuarios que eliminar 
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
        '401':
            description: El token no es válido
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
        '404':
          description: La issue no existe 
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        
      security:
      - ApiKeyAuth: []
  /issues/{idIssue}/deadline/:
    get:
      tags:
      - Deadlines
      summary: Obten el deadline y su motivo de la issue
      operationId: get_deadline
      parameters:
      - name: idIssue
        in: path
        description: ID de la Issue de la que se quiere realizar la consulta
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
            description: Se ha obtenido el deadline y su motivo de la issue correctamente
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                    items: 
                      $ref: '#/components/schemas/Deadline'
        '401':
            description: El token no es válido
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
        '404':
          description: No se ha podido encontrar la Issue o la issue no tiene deadline
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      security:
      - ApiKeyAuth: []
    post:
      tags:
      - Deadlines
      summary: Añade un deadline a una issue
      operationId: add_deadline
      parameters:
      - name: idIssue
        in: path
        description: ID de la Issue de la que se quiere realizar la consulta
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties: 
                deadline:
                  type: string
                  format: date-time
                  description: Fecha limite de la issue
                motivo:
                  type: string
                  description: Motivo por el que se ha puesto el deadline
      responses:
        '201':
            description: Se ha creado la deadline y se ha añadido a la issue correctamente
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                    deadline:
                      $ref: '#/components/schemas/Deadline'
                    issue:
                      $ref: '#/components/schemas/Issue'
        '401':
            description: El token no es válido
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
        '404':
          description: No se ha podido encontrar la Issue o la issue no tiene deadline
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '409':
          description: La issue ya tiene un deadline
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      security:
      - ApiKeyAuth: []
  /issues/{idIssue}/deadline/delete/:
    delete:
        tags:
        - Deadlines
        summary: Elimina el deadline de la issue
        operationId: delete_deadline
        parameters:
        - name: idIssue
          in: path
          description: ID de la issue a la que se le quiere eliminar el deadline
          required: true
          schema:
            type: integer
            format: int64
        responses:
          '200':
              description: La deadline ha sido eliminada de la issue correctamente
              content: 
                application/json:
                  schema:
                    type: object
                    properties:
                      message:
                        type: string
                      items: 
                        $ref: '#/components/schemas/Issue'
          '400':
              description: Los datos introducidos no son validos o la issue no tiene deadline
              content: 
                application/json:
                  schema:
                    type: object
                    properties:
                      message:
                        type: string
          '401':
              description: El token no es válido
              content: 
                application/json:
                  schema:
                    type: object
                    properties:
                      message:
                        type: string
          '404':
            description: La issue no existe 
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
        security:
        - ApiKeyAuth: []
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        password:
          type: string
        last_login:
          type: string
          format: date-time
        is_superuser:
          type: boolean
        username:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        is_staff:
          type: boolean
        is_active:
          type: boolean
        date_joined:
          type: string
          format: date-time
        groups:
          type: array
          items:
            type: string
        user_permissions:
          type: array
          items:
            type: string
    UserSimple:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email: 
          type: string
    Deadline:
      type: object
      properties:
        issue_id:
          type: integer
        deadline:
          type: string
          format: date-time
        motivo:
          type: string
    Issue:
      type: object
      properties:
        id:
          type: integer
        asunto:
          type: string
        descripcion:
          type: string
        creador:
          type: object
          properties:
            id:
              type: integer
            username:
              type: string
            email:
              type: string
        associat:
          type: object
          properties:
            id:
              type: integer
            username:
              type: string
            email:
              type: string
        vigilant:
          type: object
          properties:
            id:
              type: integer
            username:
              type: string
            email:
              type: string
        deleted:
          type: boolean
        asignada:
          type: object
          properties:
            id:
              type: integer
            username:
              type: string
            email:
              type: string
        blocked:
          type: boolean
        reason_blocked:
          type: string
        deadline:
          type: string
          format: date-time
        prioridad:
          type: string
        status:
          type: string
        

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: Authorization
      in: header
      description: "Para introducir el token, poner: ''Token <Valor_del_Token>''"